<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 ，为了使用接口动态代理，这里必须是接口的全路径名-->
<mapper namespace="com.sictiy.jserver.db.mapper.{{ meta.java_name }}Mapper">
    <!-- 查询的statement，内容：sql语句。
       id：唯一标识，随便写，在同一个命名空间下保持唯一，使用动态代理之后要求和方法名保持一致
       resultType：sql语句查询结果集的封装类型，使用动态代理之后和方法的返回类型一致；resultMap：二选一
       parameterType：参数的类型，使用动态代理之后和方法的参数类型一致
     -->
    {% for select in meta.selects %}
        <select id="query{{ meta.java_name }}By{{ select }}" resultType="com.sictiy.jserver.db.pojo.{{ meta.java_name }}Info">
            select * from {{ meta.table }} where {{ select }} = #{{{ select }}}
        </select>
    {% endfor %}

    <select id="queryAll" resultType="com.sictiy.jserver.db.pojo.{{ meta.java_name }}Info">
        select * from {{ meta.table }}
    </select>
    <!-- 新增的Statement
       id：唯一标识，随便写，在同一个命名空间下保持唯一，使用动态代理之后要求和方法名保持一致
       parameterType：参数的类型，使用动态代理之后和方法的参数类型一致
       useGeneratedKeys:开启主键回写
       keyColumn：指定数据库的主键
       keyProperty：主键对应的pojo属性名
     -->
    <insert id="insert{{ meta.java_name }}" useGeneratedKeys="true" keyColumn="{{ meta.key }}" keyProperty="{{ meta.key }}"
            parameterType="com.sictiy.jserver.db.pojo.{{ meta.java_name }}Info">
        INSERT INTO {{ meta.table }} (
        {% for field in meta.fields %}
            {% if loop.last %}
                {{ field.name }}
            {% else %} }
                {{ field.name }},
            {% endif %}
        {% endfor %}
        )
        VALUES
        (
        {% for field in meta.fields %}
            {% if loop.last %}
                #{{{ field.name }}}
            {% else %}
                #{{{ field.name }}},
            {% endif %}
        {% endfor %}
        );
    </insert>
    <!--
       更新的statement
       id：唯一标识，随便写，在同一个命名空间下保持唯一，使用动态代理之后要求和方法名保持一致
       parameterType：参数的类型，使用动态代理之后和方法的参数类型一致
     -->
    <update id="update{{ meta.java_name }}" parameterType="com.sictiy.jserver.db.pojo.{{ meta.java_name }}Info">
        UPDATE {{ meta.table }}
        <trim prefix="set" suffixOverrides=",">
            {% for field in meta.fields %}
                {% if not field.name == meta.key %}
                    <if test="{{ field.name }}!=null">{{ field.name }} = #{{{ field.name }}},</if>
                {% endif %}
            {% endfor %}
        </trim>
        WHERE
        ({{ meta.key }} = #{{{ meta.key }}});
    </update>
</mapper>